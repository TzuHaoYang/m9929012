diff -urN a/src/ap/ieee802_11.c b/src/ap/ieee802_11.c
--- a/src/ap/ieee802_11.c	2021-02-21 20:38:48.137868799 +0530
+++ b/src/ap/ieee802_11.c	2021-02-21 20:45:48.347675251 +0530
@@ -4597,6 +4597,11 @@
 		   le_to_host16(mgmt->u.disassoc.reason_code));
 	hostapd_ubus_notify(hapd, "disassoc", mgmt->sa);
 
+	wpa_msg(hapd->msg_ctx, MSG_INFO, NL_CMD_FRAME "type=%s STA=" MACSTR
+			" disconnect_type=%s reason=%d",
+			EVT_FRAME_DISCONNECT, MAC2STR(mgmt->sa) , EVT_DISC_TYPE_DISASSOC,
+			le_to_host16(mgmt->u.disassoc.reason_code));
+
 	sta = ap_get_sta(hapd, mgmt->sa);
 	if (sta == NULL) {
 		wpa_printf(MSG_INFO, "Station " MACSTR " trying to disassociate, but it is not associated",
@@ -4664,6 +4669,11 @@
 
 	hostapd_ubus_notify(hapd, "deauth", mgmt->sa);
 
+	wpa_msg(hapd->msg_ctx, MSG_INFO, NL_CMD_FRAME "type=%s STA=" MACSTR
+			" disconnect_type=%s reason=%d",
+			EVT_FRAME_DISCONNECT, MAC2STR(mgmt->sa) , EVT_DISC_TYPE_DEAUTH,
+			le_to_host16(mgmt->u.deauth.reason_code));
+
 	sta = ap_get_sta(hapd, mgmt->sa);
 	if (sta == NULL) {
 		wpa_msg(hapd->msg_ctx, MSG_DEBUG, "Station " MACSTR " trying "
@@ -4906,6 +4916,29 @@
 	return 1;
 }
 
+char *opensync_event_to_str(int stype)
+{
+	char *stype_str = NULL;
+
+	switch (stype) {
+	case WLAN_FC_STYPE_PROBE_REQ:
+		stype_str = EVT_FRAME_PROBE_REQ; 
+		break;
+	case WLAN_FC_STYPE_ASSOC_REQ:
+		stype_str = EVT_FRAME_ASSOC_REQ;
+		break;
+	case WLAN_FC_STYPE_REASSOC_REQ:
+		stype_str = EVT_FRAME_REASSOC_REQ;
+		break;
+	case WLAN_FC_STYPE_ACTION:
+		stype_str = EVT_FRAME_ACTION;
+		break;
+	default:
+		break;
+	}
+
+	return stype_str;
+}
 
 /**
  * ieee802_11_mgmt - process incoming IEEE 802.11 management frames
@@ -4928,6 +4961,7 @@
 	int ret = 0;
 	unsigned int freq;
 	int ssi_signal = fi ? fi->ssi_signal : 0;
+	char *stype_str = NULL;
 
 	if (len < 24)
 		return 0;
@@ -4979,6 +5013,34 @@
 		return 1;
 	}
 
+	if (stype_str = opensync_event_to_str(stype)) {
+		if (stype == WLAN_FC_STYPE_PROBE_REQ) {
+			const u8 *ie;
+			size_t ie_len;
+			struct ieee802_11_elems elems;
+
+			if (len > IEEE80211_HDRLEN) {
+				ie = ((const u8 *) mgmt) + IEEE80211_HDRLEN;
+				ie_len = len - IEEE80211_HDRLEN;
+				if (ieee802_11_parse_elems(ie, ie_len, &elems, 0) != ParseFailed) {
+					wpa_msg(hapd->msg_ctx, MSG_INFO, NL_CMD_FRAME
+							"type=%s sa=" MACSTR " ssi_signal=%d ssid_null=%d",
+							stype_str, MAC2STR(mgmt->sa), ssi_signal,
+							elems.ssid_len > 0 ? 0 : 1);
+				}
+			}
+		} else {
+			size_t hex_len = 2 * len + 1;
+			char *hex = os_malloc(hex_len);
+
+			if (hex != NULL) {
+				wpa_snprintf_hex(hex, hex_len, buf, len);
+				wpa_msg(hapd->msg_ctx, MSG_INFO, NL_CMD_FRAME "type=%s buf=%s", stype_str, hex);
+				os_free(hex);
+			}
+		}
+	}
+
 	if (stype == WLAN_FC_STYPE_PROBE_REQ) {
 		handle_probe_req(hapd, mgmt, len, ssi_signal);
 		return 1;
diff -urN a/src/common/wpa_ctrl.h b/src/common/wpa_ctrl.h
--- a/src/common/wpa_ctrl.h	2021-02-21 20:38:55.777828824 +0530
+++ b/src/common/wpa_ctrl.h	2021-02-21 20:42:02.684852101 +0530
@@ -392,6 +392,16 @@
  * frame=<saqueryreq/saqueryresp> error=<error string> */
 #define OCV_FAILURE "OCV-FAILURE "
 
+#define NL_CMD_FRAME "NL80211-CMD-FRAME "
+
+#define EVT_FRAME_PROBE_REQ "EVT-FRAME-PROBE-REQ"
+#define EVT_FRAME_ASSOC_REQ "EVT-FRAME-ASSOC-REQ"
+#define EVT_FRAME_REASSOC_REQ "EVT-FRAME-REASSOC-REQ"
+#define EVT_FRAME_ACTION "EVT-FRAME-ACTION"
+#define EVT_FRAME_DISCONNECT "EVT-FRAME-DISCONNECT"
+#define EVT_DISC_TYPE_DEAUTH "deauth"
+#define EVT_DISC_TYPE_DISASSOC "disassoc"
+
 #ifndef BIT
 #define BIT(x) (1U << (x))
 #endif
