#!/bin/sh

#source kconfig to fetch target_model
. /usr/opensync/etc/kconfig
if [ $CONFIG_TARGET_MODEL = "SR400AC" || $CONFIG_TARGET_MODEL = "834-5" ]; 
then
   echo "Target is SR400ac or 834-5. Skip it !!"
   exit 1  
fi

if [ $# -ne 1 ];
then
    echo "Usage: `basename $0` <rootfs-path>"
    exit 1
fi

ROOTFS=$1

echo "###### post-install ${ROOTFS} #######"

##
# Version
#
ln -sf "${INSTALL_PREFIX:1}/.version" "${ROOTFS}/.version"

##
# System services
#
#ln -sf ../init.d/boot ${ROOTFS}/etc/rc3.d/S26boot
#ln -sf ../init.d/boot ${ROOTFS}/etc/rc3.d/K26boot
#ln -sf ../init.d/syslogd ${ROOTFS}/etc/rc3.d/S28syslogd
#ln -sf ../init.d/htpdate ${ROOTFS}/etc/rc3.d/S49htpdate
#ln -sf ../init.d/debugnet ${ROOTFS}/etc/rc3.d/S50debugnet
#ln -sf ../init.d/dropbear ${ROOTFS}/etc/rc3.d/S51dropbear
#ln -sf ../init.d/firewall ${ROOTFS}/etc/rc3.d/S60firewall
#ln -sf ../init.d/fan ${ROOTFS}/etc/rc3.d/S60fan
#ln -sf ../init.d/bcreset ${ROOTFS}/etc/rc3.d/S962bcreset

##
# OpenSync
#
#ln -sf ../init.d/openvswitch ${ROOTFS}/etc/rc3.d/S90openvswitch
#ln -sf ../init.d/opensync ${ROOTFS}/etc/rc3.d/S99opensync
ln -sf ../../usr/opensync/scripts/opensync ${ROOTFS}/etc/rc3.d/S99opensync
ln -sf ../../usr/opensync/scripts/opensync ${ROOTFS}/etc/rc3.d/K10opensync

##
# Driver
#
ln -sf ../init.d/bcm-wlan-drivers.sh ${ROOTFS}/etc/rc3.d/K30wlan

##
# OMCI WAR
#
ln -sf ../../usr/opensync/scripts/omci ${ROOTFS}/etc/rc3.d/K11omci

##
# Tools
#
#ln -sf ../usr/opensync/tools/bcmcli  ${ROOTFS}/bin/bcmcli
#ln -sf ../usr/opensync/tools/ovsh  ${ROOTFS}/bin/ovsh

##
# Profile dependent actions
# remove all tools and links installed just for development/QA needs
#
cat ${ROOTFS}/usr/opensync/.versions | grep "FIRMWARE:"  | grep -E "dev|debug"
if [  $? != 0 ]; then
    echo "Production version, removing dev/factory tools"
    rm -rf ${ROOTFS}/usr/opensync/scripts/factory || echo "no factory scripts/tools: OK"
    rm -rf ${ROOTFS}/usr/sbin/dbclient || echo "no factory scripts/dbclient: OK"
    rm -rf ${ROOTFS}/usr/sbin/dropbear || echo "no factory scripts/dropbear: OK"
    rm -rf ${ROOTFS}/usr/sbin/ssh || echo "no factory scripts/ssh: OK"
    rm -rf ${ROOTFS}/usr/sbin/scp || echo "no factory scripts/scp: OK"
    #rm -rf ${ROOTFS}/usr/opensync/certs || echo "no rootfs certs: OK"
fi

##
# Certificates. We don't know who is the source of certificates (since they come from service provider) but we do know
# the final resting place. So whatever certs are located on final resting place are correct certs to use, regardless of the source.
# Use these.
#
echo "Encrypting certificates"
(
    cd ${ROOTFS}
    rm -rf ${ROOTFS}/usr/opensync/.certs > /dev/null 2>&1
    ENCKEY=$(find "./usr/opensync/" -type f ! -path "./usr/opensync/certs/*" -print0 | sort -z | xargs -r0 openssl dgst -sha512 | openssl dgst -sha256 | awk '{print $2}')
    mkdir ${ROOTFS}/usr/opensync/.certs
    openssl enc -aes-256-cbc -pass pass:${ENCKEY} -md sha256 -pbkdf2 -iter 9595 -nosalt -in ${ROOTFS}/usr/opensync/certs/ca.pem -out ${ROOTFS}/usr/opensync/.certs/ca
    openssl enc -aes-256-cbc -pass pass:${ENCKEY} -md sha256 -pbkdf2 -iter 9595 -nosalt -in ${ROOTFS}/usr/opensync/certs/client.pem -out ${ROOTFS}/usr/opensync/.certs/cl
    openssl enc -aes-256-cbc -pass pass:${ENCKEY} -md sha256 -pbkdf2 -iter 9595 -nosalt -in ${ROOTFS}/usr/opensync/certs/client_dec.key -out ${ROOTFS}/usr/opensync/.certs/dk
    openssl enc -aes-256-cbc -pass pass:${ENCKEY} -md sha256 -pbkdf2 -iter 9595 -nosalt -in ${ROOTFS}/usr/opensync/certs/upload.pem -out ${ROOTFS}/usr/opensync/.certs/up
    rm -rf ${ROOTFS}/usr/opensync/certs > /dev/null 2>&1
)
