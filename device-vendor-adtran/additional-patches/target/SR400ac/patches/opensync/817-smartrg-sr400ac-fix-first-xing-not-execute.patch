Index: opensync-2.0.5.0/src/bm/src/bm_client.c
===================================================================
--- a/src/bm/src/bm_client.c
+++ b/src/bm/src/bm_client.c
@@ -2204,7 +2204,6 @@ bm_client_connected(bm_client_t *client,
 
     STRSCPY(client->ifname, ifname); 
     client->connected = true;
-    client->xing_snr = 0;
 
     stats = bm_client_get_stats(client, ifname);
     if (WARN_ON(!stats))
@@ -2231,7 +2230,6 @@ void
 bm_client_disconnected(bm_client_t *client)
 {
     client->connected = false;
-    client->xing_snr = 0;
 
     if (client->state == BM_CLIENT_STATE_CONNECTED) {
         bm_client_set_state(client, BM_CLIENT_STATE_DISCONNECTED);
Index: opensync-2.0.5.0/src/bm/src/bm_client.h
===================================================================
--- a/src/bm/src/bm_client.h
+++ b/src/bm/src/bm_client.h
@@ -293,10 +293,6 @@ typedef struct {
     uint8_t                     hwm;
     uint8_t                     lwm;
 
-    uint8_t                     xing_snr;
-    bsal_rssi_change_t          xing_low;
-    bsal_rssi_change_t          xing_high;
-
     int                         max_rejects;
     int                         max_rejects_period;
 
Index: opensync-2.0.5.0/src/bm/src/bm_events.c
===================================================================
--- a/src/bm/src/bm_events.c
+++ b/src/bm/src/bm_events.c
@@ -669,11 +669,6 @@ bm_events_handle_rssi_xing_bs(bm_client_
     LOGI("[%s]: xing_bs '%s' snr %d (%d,%d)", event->ifname, client->mac_addr, event->data.rssi_change.rssi,
          event->data.rssi_change.low_xing, event->data.rssi_change.high_xing);
 
-    if (client->xing_snr == 0 && (now - times->last_connect < 4)) {
-        LOGI("[%s]: xing_bs '%s' skip XING event (first after connection)", event->ifname, client->mac_addr);
-        return;
-    }
-
     if (client->backoff && !client->steer_during_backoff) {
         LOGI("[%s]: xing_bs '%s' skip XING event, don't steer during pre-assoc backoff ", event->ifname, client->mac_addr);
         return;
@@ -788,13 +783,6 @@ bm_events_handle_rssi_xing_cs(bm_client_
 static void
 bm_events_handle_rssi_xing(bm_client_t *client, bsal_event_t *event)
 {
-    if (event->data.rssi_change.low_xing == client->xing_low &&
-        event->data.rssi_change.high_xing == client->xing_high &&
-        (abs(event->data.rssi_change.rssi - client->xing_snr) <= BM_CLIENT_SNR_XING_DIFF)) {
-        LOGT("%s same xing skip (%d, %d) snr %d old %d", client->mac_addr, client->xing_low, client->xing_high,
-             event->data.rssi_change.rssi, client->xing_snr);
-        return;
-    }
 
     switch (client->steering_state) {
     case BM_CLIENT_CLIENT_STEERING:
@@ -806,11 +794,6 @@ bm_events_handle_rssi_xing(bm_client_t *
         bm_events_handle_rssi_xing_bs(client, event);
         break;
     }
-
-    /* Save last XING values */
-    client->xing_snr = event->data.rssi_change.rssi;
-    client->xing_low = event->data.rssi_change.low_xing;
-    client->xing_high = event->data.rssi_change.high_xing;
 }
 
 /*****************************************************************************/
