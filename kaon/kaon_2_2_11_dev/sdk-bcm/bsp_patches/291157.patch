
+++ //depot/CommEngine/patches/WLAN/PATCH_502L07_P1/data-model/cms-dm-tr181-wifi-generic.xml
--- //depot/CommEngine/patches/WLAN/PATCH_502L07_P1/data-model/cms-dm-tr181-wifi-generic.xml

@@ -760,7 +760,7 @@
 
   <parameter name="WlAuthMode" type="string" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="open" maxLength="18" nvram="ap_sec.auth_mode" />
 
-  <parameter name="WlAuthAkm" type="string" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="open" maxLength="18" nvram="ap_sec.akm" />
+  <parameter name="WlAuthAkm" type="string" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="open" maxLength="64" nvram="ap_sec.akm" />
 
   <parameter name="X_BROADCOM_COM_WlAuth" type="int" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="0" nvram="ap_sec.auth" />
 

+++ //depot/CommEngine/patches/WLAN/PATCH_502L07_P1/data-model/cms-dm-tr181-wifi-unfwlcfg.xml
--- //depot/CommEngine/patches/WLAN/PATCH_502L07_P1/data-model/cms-dm-tr181-wifi-unfwlcfg.xml

@@ -1005,7 +1005,7 @@
 
   <parameter name="WlAuthMode" type="string" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="open" maxLength="18" />
 
-  <parameter name="WlAuthAkm" type="string" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="open" maxLength="18" validValuesArray="WlAuthAkmValues"/>
+  <parameter name="WlAuthAkm" type="string" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="open" maxLength="64" />
 
   <parameter name="X_BROADCOM_COM_WlAuth" type="int" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="0" />
 
@@ -1458,20 +1458,13 @@
   <element>WEP-128</element>
   <element>WPA-Personal</element>
   <element>WPA2-Personal</element>
+  <element>WPA3-Personal</element>
   <element>WPA-WPA2-Personal</element>
+  <element>WPA3-Personal-Transition</element>
   <element>WPA-Enterprise</element>
   <element>WPA2-Enterprise</element>
   <element>WPA-WPA2-Enterprise</element>
 
-<validstringarray name="WlAuthAkmValues" />
-  <element>open</element>
-  <element>psk</element>
-  <element>psk2</element>
-  <element>psk psk2</element>
-  <element>wpa</element>
-  <element>wpa2</element>
-  <element>wpa wpa2</element>
-
 <validstringarray name="ifOperStatusValues" />
   <element>Up</element>
   <element>Down</element>

+++ //depot/CommEngine/patches/WLAN/PATCH_502L07_P1/data-model/cms-dm-tr98.xml
--- //depot/CommEngine/patches/WLAN/PATCH_502L07_P1/data-model/cms-dm-tr98.xml

@@ -2529,7 +2529,7 @@
 
   <parameter name="WlWpa" type="string" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="tkip" maxLength="16" />
 
-  <parameter name="WlAuthMode" type="string" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="open" maxLength="18" />
+  <parameter name="WlAuthMode" type="string" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="open" maxLength="64" />
 
   <parameter name="WlWpaGTKRekey" type="int" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="0" />
 

+++ //depot/CommEngine/patches/WLAN/PATCH_502L07_P1/userspace/private/libs/cms_core/linux/device2/rcl2_unfwifi.c
--- //depot/CommEngine/patches/WLAN/PATCH_502L07_P1/userspace/private/libs/cms_core/linux/device2/rcl2_unfwifi.c

@@ -546,7 +546,11 @@
         } 
         else 
         {
-            // check mode changed
+            UBOOL8 wep64_128_mode_changed = FALSE;
+
+            /* Check mode changed.
+             *  --This change is coming from CWMP or CLI
+             */ 
             if (cmsUtl_strcmp(newObj->modeEnabled, currObj->modeEnabled) != 0)
             {
                 _Dev2WifiRadioObject *radioObj = NULL;
@@ -562,6 +566,8 @@
                 // WEP64 or WEP128
                 if (!cmsUtl_strcmp(newObj->modeEnabled, MDMVS_WEP_64) || !cmsUtl_strcmp(newObj->modeEnabled, MDMVS_WEP_128))
                 {
+                    wep64_128_mode_changed = TRUE;
+
                     // turn off "n-mode"
                     if(cmsUtl_strcmp(radioObj->X_BROADCOM_COM_WlNmode,"off"))
                     {
@@ -570,8 +576,8 @@
                         cmsObj_setFlags(radioObj,&radio_iidStack, OSF_NO_RCL_CALLBACK);
                     }
 
-                    REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthMode, MDMVS_OPEN, mdmLibCtx.allocFlags);
-                    REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthAkm, MDMVS_OPEN, mdmLibCtx.allocFlags);
+                    REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthMode, "open", mdmLibCtx.allocFlags);
+                    REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthAkm, "open", mdmLibCtx.allocFlags);
                     REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlWep, "enabled", mdmLibCtx.allocFlags);
                 } 
                 else
@@ -586,43 +592,103 @@
                     if (!cmsUtl_strcmp(newObj->modeEnabled, MDMVS_NONE))
                     {
                         /* if modeEnable is NONE */
-                        REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthMode, MDMVS_OPEN, mdmLibCtx.allocFlags);
-                        REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthAkm, MDMVS_OPEN, mdmLibCtx.allocFlags);
+                        REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthMode, "open", mdmLibCtx.allocFlags);
+                        REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthAkm, "open", mdmLibCtx.allocFlags);
                     }
                     else if (!cmsUtl_strcmp(newObj->modeEnabled, MDMVS_WPA_PERSONAL))
                     {
-                        REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthAkm, MDMVS_PSK, mdmLibCtx.allocFlags);
-                        REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthMode, MDMVS_OPEN, mdmLibCtx.allocFlags);
+                        REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthAkm, "psk", mdmLibCtx.allocFlags);
+                        REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthMode, "open", mdmLibCtx.allocFlags);
                     } 
                     else if (!cmsUtl_strcmp(newObj->modeEnabled, MDMVS_WPA2_PERSONAL))
                     {
-                        REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthAkm, MDMVS_PSK2, mdmLibCtx.allocFlags);
-                        REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthMode, MDMVS_OPEN, mdmLibCtx.allocFlags);
+                        REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthAkm, "psk2", mdmLibCtx.allocFlags);
+                        REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthMode, "open", mdmLibCtx.allocFlags);
                     } 
                     else if (!cmsUtl_strcmp(newObj->modeEnabled, MDMVS_WPA_WPA2_PERSONAL))
                     {
-                        REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthAkm, MDMVS_PSK_PSK2, mdmLibCtx.allocFlags);
-                        REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthMode, MDMVS_OPEN, mdmLibCtx.allocFlags);
+                        REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthAkm, "psk psk2", mdmLibCtx.allocFlags);
+                        REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthMode, "open", mdmLibCtx.allocFlags);
                     } 
                     else if (!cmsUtl_strcmp(newObj->modeEnabled, MDMVS_WPA_ENTERPRISE))
                     {
-                        REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthAkm, MDMVS_WPA, mdmLibCtx.allocFlags);
+                        REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthAkm, "wpa", mdmLibCtx.allocFlags);
                         REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthMode, "radius", mdmLibCtx.allocFlags);
                     } 
+                    else if (!cmsUtl_strcmp(newObj->modeEnabled, MDMVS_WPA3_PERSONAL_TRANSITION))
+                    {
+                        REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthAkm, "psk2 sae", mdmLibCtx.allocFlags);
+                        REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthMode, "open", mdmLibCtx.allocFlags);
+                    } 
+                    else if (!cmsUtl_strcmp(newObj->modeEnabled, MDMVS_WPA3_PERSONAL))
+                    {
+                        REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthAkm, "sae", mdmLibCtx.allocFlags);
+                        REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthMode, "open", mdmLibCtx.allocFlags);
+                    } 
                     else if (!cmsUtl_strcmp(newObj->modeEnabled, MDMVS_WPA2_ENTERPRISE))
                     {
-                        REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthAkm, MDMVS_WPA2, mdmLibCtx.allocFlags);
+                        REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthAkm, "wpa2", mdmLibCtx.allocFlags);
                         REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthMode, "radius", mdmLibCtx.allocFlags);
                     } 
                     else if (!cmsUtl_strcmp(newObj->modeEnabled, MDMVS_WPA_WPA2_ENTERPRISE))
                     {
-                        REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthAkm, MDMVS_WPA_WPA2, mdmLibCtx.allocFlags);
+                        REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthAkm, "wpa wpa2", mdmLibCtx.allocFlags);
                         REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlAuthMode, "radius", mdmLibCtx.allocFlags);
                     }
                 }
 
                 cmsObj_free((void **)&radioObj);
             }
+            /* Check nvram akm change and update modeEnabled.
+             *  -- This change is coming from nvram commit 
+             */
+            else if (cmsUtl_strcmp(newObj->wlAuthAkm, currObj->wlAuthAkm) != 0)
+            {
+                /* Note: the checking sequence does matter. */
+                char strAkm[BUFLEN_128] = {0};
+                snprintf(strAkm, 128, "%s ", newObj->wlAuthAkm); 
+                if (strstr(strAkm, "psk2 ") && strstr(strAkm, "psk "))
+                {
+                    REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->modeEnabled, MDMVS_WPA_WPA2_PERSONAL, mdmLibCtx.allocFlags);
+                    REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlWep, "disabled", mdmLibCtx.allocFlags);
+                }
+                else if (strstr(strAkm, "psk2 ") && strstr(strAkm, "sae "))
+                {
+                    REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->modeEnabled, MDMVS_WPA3_PERSONAL_TRANSITION, mdmLibCtx.allocFlags);
+                    REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlWep, "disabled", mdmLibCtx.allocFlags);
+                }
+                else if (strstr(strAkm, "psk2 "))
+                {
+                    REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->modeEnabled, MDMVS_WPA2_PERSONAL, mdmLibCtx.allocFlags);
+                    REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlWep, "disabled", mdmLibCtx.allocFlags);
+                }
+                else if (strstr(strAkm, "psk "))
+                {
+                    REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->modeEnabled, MDMVS_WPA_PERSONAL, mdmLibCtx.allocFlags);
+                    REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlWep, "disabled", mdmLibCtx.allocFlags);
+                }
+                else if (strstr(strAkm, "sae "))
+                {
+                    REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->modeEnabled, MDMVS_WPA3_PERSONAL, mdmLibCtx.allocFlags);
+                    REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlWep, "disabled", mdmLibCtx.allocFlags);
+                }
+                else if (strstr(strAkm, "wpa2 ") && strstr(strAkm, "wpa "))
+                {
+                    REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->modeEnabled, MDMVS_WPA_WPA2_ENTERPRISE, mdmLibCtx.allocFlags);
+                    REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlWep, "disabled", mdmLibCtx.allocFlags);
+                }
+                else if (strstr(strAkm, "wpa2 "))
+                {
+                    REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->modeEnabled, MDMVS_WPA2_ENTERPRISE, mdmLibCtx.allocFlags);
+                    REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlWep, "disabled", mdmLibCtx.allocFlags);
+                }
+                else if ((cmsUtl_strcmp(newObj->wlAuthAkm, "open") == 0) ||
+                         (cmsUtl_strcmp(newObj->wlAuthAkm, "") == 0  ))
+                {
+                    REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->modeEnabled, MDMVS_NONE, mdmLibCtx.allocFlags);
+                    REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->wlWep, "disabled", mdmLibCtx.allocFlags);
+                }
+            }
 
             // check WEPKey change
             if (cmsUtl_strcmp(newObj->WEPKey, currObj->WEPKey))
@@ -650,8 +716,22 @@
                 } /* switch(wlkeyindex) */
             } /* WEPKey */
 
+            // check nvram wep enable and update modeEnabled
+            if (cmsUtl_strcmp(newObj->wlWep, currObj->wlWep) != 0)
+            {
+                if ((cmsUtl_strcmp(newObj->wlWep, "enabled") == 0) && !wep64_128_mode_changed)
+                {
+                    REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->modeEnabled, MDMVS_WEP_64, mdmLibCtx.allocFlags);
+                }
+                else if (cmsUtl_strcmp(newObj->wlWep, "disabled") == 0)
+                {
+                    REPLACE_STRING_IF_NOT_EQUAL_FLAGS(newObj->modeEnabled, MDMVS_NONE, mdmLibCtx.allocFlags);
+                }
+            }
+
             // check nvram wep key or index change and update WEPKey
             ret = updateNvramWEPKeyChanged(newObj, currObj);
+
         } /* no reset */
 
         cmsObj_free((void **)&wifiAccessPointObj);
