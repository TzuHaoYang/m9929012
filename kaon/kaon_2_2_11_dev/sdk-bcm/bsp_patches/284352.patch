
+++ //depot/CommEngine/patches/WLAN/PATCH_502L07_P1/bcmdrivers/opensource/net/enet/impl7/enet.c
--- //depot/CommEngine/patches/WLAN/PATCH_502L07_P1/bcmdrivers/opensource/net/enet/impl7/enet.c

@@ -311,14 +311,14 @@
         /* Dispatch packets from SW queues bounded by ENET_SWQ_BOUND */
         if (enet_swqueue->swq_schedule)
         {
-            /* Transmit packets from SW queue */
+            /* Transmit packets from SKB based SW queue */
             if (enet_swqueue->skb_pktqueue.len != 0U)
             {
                 enet_swqueue->pkts_count += enet_swqueue_xmit(enet_swqueue,
                     &enet_swqueue->skb_pktqueue, enet_swq_bound, SKBUFF_PTR);
             }
 
-            /* Transmit packets from SW queue */
+            /* Transmit packets from FKB based SW queue */
             if (enet_swqueue->fkb_pktqueue.len != 0U)
             {
                 enet_swqueue->pkts_count += enet_swqueue_xmit(enet_swqueue,
@@ -2635,22 +2635,34 @@
 {
     uint32_t            rx_pktcnt;
     d3lut_key_t         d3lut_key;
+    pktqueue_t          temp_pktqueue;  /* Declared on stack */
     d3lut_elem_t      * d3lut_elem;
     pktqueue_pkt_t    * pkt;
 
     ENET_SWQUEUE_LOCK(enet_swqueue); // +++++++++++++++++++++++++++++++++++++++
 
+    /* Transfer packets to a local pktqueue */
+    temp_pktqueue.head   = pktqueue->head;
+    temp_pktqueue.tail   = pktqueue->tail;
+    temp_pktqueue.len    = pktqueue->len;
+
+    PKTQUEUE_RESET(pktqueue); /* head,tail, not reset */
+
+    ENET_SWQUEUE_UNLK(enet_swqueue); // ---------------------------------------
+
+    /* Now lock-less; transmit packets from local pktqueue */
+
     d3lut_key.v16 = 0; /* 2b-radio, 2b-incarn, 12b-dest */
     rx_pktcnt = 0;
 
     while (budget)
     {
-        if (pktqueue->len != 0U)
+        if (temp_pktqueue.len != 0U)
         {
-            pkt             = pktqueue->head;
-            pktqueue->head  = PKTQUEUE_PKT_SLL(pkt, NBuffPtrType);
+            pkt             = temp_pktqueue.head;
+            temp_pktqueue.head  = PKTQUEUE_PKT_SLL(pkt, NBuffPtrType);
             PKTQUEUE_PKT_SET_SLL(pkt, PKTQUEUE_PKT_NULL, NBuffPtrType);
-            pktqueue->len--;
+            temp_pktqueue.len--;
 
             d3lut_key.v16 = PKTQUEUE_PKT_KEY(pkt, NBuffPtrType);
 
@@ -2666,7 +2678,7 @@
                 enet_swqueue->pkts_dropped++;
             }
         }
-        else /* pktqueue->len == 0 : No more packets to read */
+        else /* temp_pktqueue.len == 0 : No more packets to read */
         {
             break;
         }
@@ -2674,7 +2686,26 @@
         --budget;
     } /* while (budget) */
 
-    ENET_SWQUEUE_UNLK(enet_swqueue); // ---------------------------------------
+    if (temp_pktqueue.len != 0U) {
+        /* Out of budget, prepend left-over packets to ENET SWq */
+
+        ENET_SWQUEUE_LOCK(enet_swqueue); // +++++++++++++++++++++++++++++++++++
+
+        if (pktqueue->len == 0) {
+            pktqueue->tail = temp_pktqueue.tail;
+        } else {
+            PKTQUEUE_PKT_SET_SLL(temp_pktqueue.tail, pktqueue->head,
+                                    NBuffPtrType);
+        }
+
+        pktqueue->head = temp_pktqueue.head;
+        pktqueue->len += temp_pktqueue.len;
+
+        ENET_SWQUEUE_UNLK(enet_swqueue); // -----------------------------------
+
+        PKTQUEUE_RESET(&temp_pktqueue); /* head,tail, not reset */
+
+    }
 
     return rx_pktcnt;
 

+++ //depot/CommEngine/patches/WLAN/PATCH_502L07_P1/bcmdrivers/opensource/net/wfd/impl1/wfd_dev.c
--- //depot/CommEngine/patches/WLAN/PATCH_502L07_P1/bcmdrivers/opensource/net/wfd/impl1/wfd_dev.c

@@ -1852,27 +1852,39 @@
     uint16_t pktfwd_key;
     uint16_t pktlist_prio, pktlist_dest;
     uint32_t            rx_pktcnt;
+    pktqueue_t          temp_pktqueue; /* Declared on stack */
     struct sk_buff    * skb;
     pktqueue_pkt_t    * pkt;
     pktqueue_t        * pktqueue;
     wfd_swqueue_t     * wfd_swqueue = wfd_p->wfd_swqueue;
     pktlist_context_t * pktlist_context = wfd_p->pktlist_context_p;
 
+    pktqueue    = &wfd_swqueue->pktqueue;
 
     WFD_SWQUEUE_LOCK(wfd_swqueue); // +++++++++++++++++++++++++++++++++++++++++
 
-    pktqueue    = &wfd_swqueue->pktqueue;
+    /* Transfer packets to a local pktqueue */
+    temp_pktqueue.head   = pktqueue->head;
+    temp_pktqueue.tail   = pktqueue->tail;
+    temp_pktqueue.len    = pktqueue->len;
+
+    PKTQUEUE_RESET(pktqueue); /* head,tail, not reset */
+
+    WFD_SWQUEUE_UNLK(wfd_swqueue); // -----------------------------------------
+
+    /* Now lock-less; transmit packets from local pktqueue */
+
     pktfwd_key  = 0; /* 2b-radio, 2b-incarn, 12b-dest */
     rx_pktcnt   = 0;
 
     while (budget)
     {
-        if (pktqueue->len != 0U)
+        if (temp_pktqueue.len != 0U)
         {
-            pkt             = pktqueue->head;
-            pktqueue->head  = PKTQUEUE_PKT_SLL(pkt, SKBUFF_PTR);
+            pkt             = temp_pktqueue.head;
+            temp_pktqueue.head  = PKTQUEUE_PKT_SLL(pkt, SKBUFF_PTR);
             PKTQUEUE_PKT_SET_SLL(pkt, PKTQUEUE_PKT_NULL, SKBUFF_PTR);
-            pktqueue->len--;
+            temp_pktqueue.len--;
 
             skb = (struct sk_buff *)pkt;
 
@@ -1925,7 +1937,7 @@
             ++rx_pktcnt;
 
         }
-        else /* pktqueue->len == 0 : No more packets to read */
+        else /* temp_pktqueue.len == 0 : No more packets to read */
         {
             break;
         }
@@ -1933,7 +1945,25 @@
         --budget;
     } /* while (budget) */
 
-    WFD_SWQUEUE_UNLK(wfd_swqueue); // -----------------------------------------
+    if (temp_pktqueue.len != 0U) {
+        /* Out of budget, prepend left-over packets to ENET SWq */
+
+        WFD_SWQUEUE_LOCK(wfd_swqueue); // +++++++++++++++++++++++++++++++++++++
+
+        if (pktqueue->len == 0) {
+            pktqueue->tail = temp_pktqueue.tail;
+        } else {
+            PKTQUEUE_PKT_SET_SLL(temp_pktqueue.tail, pktqueue->head, SKBUFF_PTR);
+        }
+
+        pktqueue->head = temp_pktqueue.head;
+        pktqueue->len += temp_pktqueue.len;
+
+        WFD_SWQUEUE_UNLK(wfd_swqueue); // -------------------------------------
+
+        PKTQUEUE_RESET(&temp_pktqueue); /* head,tail, not reset */
+
+    }
 
     if (likely(rx_pktcnt))
     {
@@ -1969,6 +1999,7 @@
     uint16_t pktlist_prio, pktlist_dest;
     uint32_t ssid;
     uint32_t            rx_pktcnt;
+    pktqueue_t          temp_pktqueue; /* Declared on stack */
     FkBuff_t          * fkb;
     pktqueue_pkt_t    * pkt;
     pktqueue_t        * pktqueue;
@@ -1978,20 +2009,32 @@
 
     ASSERT(peer_pktlist_context->keymap_fn);
 
+    pktqueue    = &wfd_swqueue->pktqueue;
+
     WFD_SWQUEUE_LOCK(wfd_swqueue); // +++++++++++++++++++++++++++++++++++++++++
 
-    pktqueue    = &wfd_swqueue->pktqueue;
+    /* Transfer packets to a local pktqueue */
+    temp_pktqueue.head   = pktqueue->head;
+    temp_pktqueue.tail   = pktqueue->tail;
+    temp_pktqueue.len    = pktqueue->len;
+
+    PKTQUEUE_RESET(pktqueue); /* head,tail, not reset */
+
+    WFD_SWQUEUE_UNLK(wfd_swqueue); // -----------------------------------------
+
+    /* Now lock-less; transmit packets from local pktqueue */
+
     pktfwd_key  = 0; /* 2b-radio, 2b-incarn, 12b-dest */
     rx_pktcnt   = 0;
 
     while (budget)
     {
-        if (pktqueue->len != 0U)
+        if (temp_pktqueue.len != 0U)
         {
-            pkt             = pktqueue->head;
-            pktqueue->head  = PKTQUEUE_PKT_SLL(pkt, FKBUFF_PTR);
+            pkt             = temp_pktqueue.head;
+            temp_pktqueue.head  = PKTQUEUE_PKT_SLL(pkt, FKBUFF_PTR);
             PKTQUEUE_PKT_SET_SLL(pkt, PKTQUEUE_PKT_NULL, FKBUFF_PTR);
-            pktqueue->len--;
+            temp_pktqueue.len--;
 
             fkb = PNBUFF_2_FKBUFF(pkt);
 
@@ -2031,7 +2074,7 @@
             ++rx_pktcnt;
 
         }
-        else /* pktqueue->len == 0 : No more packets to read */
+        else /* temp_pktqueue.len == 0 : No more packets to read */
         {
             break;
         }
@@ -2039,7 +2082,25 @@
         --budget;
     } /* while (budget) */
 
-    WFD_SWQUEUE_UNLK(wfd_swqueue); // -----------------------------------------
+    if (temp_pktqueue.len != 0U) {
+        /* Out of budget, prepend left-over packets to ENET SWq */
+
+        WFD_SWQUEUE_LOCK(wfd_swqueue); // +++++++++++++++++++++++++++++++++++++
+
+        if (pktqueue->len == 0) {
+            pktqueue->tail = temp_pktqueue.tail;
+        } else {
+            PKTQUEUE_PKT_SET_SLL(temp_pktqueue.tail, pktqueue->head, FKBUFF_PTR);
+        }
+
+        pktqueue->head = temp_pktqueue.head;
+        pktqueue->len += temp_pktqueue.len;
+
+        WFD_SWQUEUE_UNLK(wfd_swqueue); // -------------------------------------
+
+        PKTQUEUE_RESET(&temp_pktqueue); /* head,tail, not reset */
+
+    }
 
     if (likely(rx_pktcnt))
     {
