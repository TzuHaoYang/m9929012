
+++ //depot/CommEngine/patches/WLAN/PATCH_502L07_P1/kernel/linux-4.1/include/uapi/linux/nl80211.h
--- //depot/CommEngine/patches/WLAN/PATCH_502L07_P1/kernel/linux-4.1/include/uapi/linux/nl80211.h

@@ -3592,6 +3592,10 @@
 	NL80211_KEY_DEFAULT_MGMT,
 	NL80211_KEY_TYPE,
 	NL80211_KEY_DEFAULT_TYPES,
+#ifdef CONFIG_BCM_KF_CFG80211_BACKPORT
+	NL80211_KEY_MODE,
+	NL80211_KEY_DEFAULT_BEACON,
+#endif /* CONFIG_BCM_KF_CFG80211_BACKPORT */
 
 	/* keep last */
 	__NL80211_KEY_AFTER_LAST,
@@ -4484,6 +4488,15 @@
 	NL80211_EXT_FEATURE_SCAN_MIN_PREQ_CONTENT,
 	NL80211_EXT_FEATURE_CAN_REPLACE_PTK0,
 	NL80211_EXT_FEATURE_ENABLE_FTM_RESPONDER,
+	NL80211_EXT_FEATURE_AIRTIME_FAIRNESS,
+	NL80211_EXT_FEATURE_AP_PMKSA_CACHING,
+	NL80211_EXT_FEATURE_SCHED_SCAN_BAND_SPECIFIC_RSSI_THOLD,
+	NL80211_EXT_FEATURE_EXT_KEY_ID,
+	NL80211_EXT_FEATURE_STA_TX_PWR,
+	NL80211_EXT_FEATURE_SAE_OFFLOAD,
+	NL80211_EXT_FEATURE_VLAN_OFFLOAD,
+	NL80211_EXT_FEATURE_AQL,
+	NL80211_EXT_FEATURE_BEACON_PROTECTION,
 #endif /* CONFIG_BCM_KF_CFG80211_BACKPORT */
 
 	/* add new features before the definition below */

+++ //depot/CommEngine/patches/WLAN/PATCH_502L07_P1/kernel/linux-4.1/net/wireless/nl80211.c
--- //depot/CommEngine/patches/WLAN/PATCH_502L07_P1/kernel/linux-4.1/net/wireless/nl80211.c

@@ -668,6 +668,9 @@
 	int idx;
 	int type;
 	bool def, defmgmt;
+#ifdef CONFIG_BCM_KF_CFG80211_BACKPORT
+	bool defbeacon;
+#endif /* CONFIG_BCM_KF_CFG80211_BACKPORT */
 	bool def_uni, def_multi;
 };
 
@@ -681,13 +684,21 @@
 
 	k->def = !!tb[NL80211_KEY_DEFAULT];
 	k->defmgmt = !!tb[NL80211_KEY_DEFAULT_MGMT];
+#ifdef CONFIG_BCM_KF_CFG80211_BACKPORT
+	k->defbeacon = !!tb[NL80211_KEY_DEFAULT_BEACON];
+#endif /* CONFIG_BCM_KF_CFG80211_BACKPORT */
 
 	if (k->def) {
 		k->def_uni = true;
 		k->def_multi = true;
 	}
+#ifndef CONFIG_BCM_KF_CFG80211_BACKPORT
 	if (k->defmgmt)
 		k->def_multi = true;
+#else
+	if (k->defmgmt || k->defbeacon)
+		k->def_multi = true;
+#endif /* CONFIG_BCM_KF_CFG80211_BACKPORT */
 
 	if (tb[NL80211_KEY_IDX])
 		k->idx = nla_get_u8(tb[NL80211_KEY_IDX]);
@@ -792,6 +803,7 @@
 	if (err)
 		return err;
 
+#ifndef CONFIG_BCM_KF_CFG80211_BACKPORT
 	if (k->def && k->defmgmt)
 		return -EINVAL;
 
@@ -799,16 +811,35 @@
 		if (k->def_uni || !k->def_multi)
 			return -EINVAL;
 	}
+#else
+	if ((k->def ? 1 : 0) + (k->defmgmt ? 1 : 0) +
+		(k->defbeacon ? 1 : 0) > 1)
+		return -EINVAL;
 
+	if (k->defmgmt || k->defbeacon) {
+		if (k->def_uni || !k->def_multi)
+			return -EINVAL;
+	}
+#endif /* CONFIG_BCM_KF_CFG80211_BACKPORT */
+
 	if (k->idx != -1) {
 		if (k->defmgmt) {
 			if (k->idx < 4 || k->idx > 5)
 				return -EINVAL;
+#ifdef CONFIG_BCM_KF_CFG80211_BACKPORT 
+		} else if (k->defbeacon) {
+			if (k->idx < 6 || k->idx > 7)
+				return -EINVAL;
+#endif /* CONFIG_BCM_KF_CFG80211_BACKPORT */
 		} else if (k->def) {
 			if (k->idx < 0 || k->idx > 3)
 				return -EINVAL;
 		} else {
+#ifndef CONFIG_BCM_KF_CFG80211_BACKPORT 
 			if (k->idx < 0 || k->idx > 5)
+#else
+			if (k->idx < 0 || k->idx > 7)
+#endif /* CONFIG_BCM_KF_CFG80211_BACKPORT */
 				return -EINVAL;
 		}
 	}
@@ -2940,7 +2971,11 @@
 		return -EINVAL;
 
 	/* only support setting default key */
+#ifndef CONFIG_BCM_KF_CFG80211_BACKPORT
 	if (!key.def && !key.defmgmt)
+#else
+	if (!key.def && !key.defmgmt && !key.defbeacon)
+#endif /* CONFIG_BCM_KF_CFG80211_BACKPORT */
 		return -EINVAL;
 
 	wdev_lock(dev->ieee80211_ptr);

+++ //depot/CommEngine/patches/WLAN/PATCH_502L07_P1/kernel/linux-4.1/net/wireless/util.c
--- //depot/CommEngine/patches/WLAN/PATCH_502L07_P1/kernel/linux-4.1/net/wireless/util.c

@@ -231,7 +231,11 @@
 				   struct key_params *params, int key_idx,
 				   bool pairwise, const u8 *mac_addr)
 {
+#ifndef CONFIG_BCM_KF_CFG80211_BACKPORT
 	if (key_idx > 5)
+#else
+	if (key_idx > 7)
+#endif /* CONFIG_BCM_KF_CFG80211_BACKPORT */
 		return -EINVAL;
 
 	if (!pairwise && mac_addr && !(rdev->wiphy.flags & WIPHY_FLAG_IBSS_RSN))
