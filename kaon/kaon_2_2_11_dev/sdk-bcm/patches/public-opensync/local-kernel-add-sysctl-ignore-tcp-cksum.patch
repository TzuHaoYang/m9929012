ESW-2365: kernel: add sysctl parameter for controlling incoming TCP packets checksum verification

Do not verify TCP checksum for packets coming from Broadcom's ethernet
driver only.
--- a/kernel/linux-4.1/Documentation/networking/ip-sysctl.txt
+++ b/kernel/linux-4.1/Documentation/networking/ip-sysctl.txt
@@ -281,6 +281,12 @@ tcp_fin_timeout - INTEGER
 	Cf. tcp_max_orphans
 	Default: 60 seconds
 
+tcp_ignore_csum - BOOLEAN
+	Disable the calculation and verification of incoming IPv4 TCP
+	packets. Increases network throughput performance at the cost
+	of failing to detect potential bad TCP packets.
+	Default: false
+
 tcp_frto - INTEGER
 	Enables Forward RTO-Recovery (F-RTO) defined in RFC5682.
 	F-RTO is an enhanced recovery algorithm for TCP retransmission
--- a/kernel/linux-4.1/include/net/tcp.h
+++ b/kernel/linux-4.1/include/net/tcp.h
@@ -266,6 +266,7 @@ extern int sysctl_tcp_timestamps;
 extern int sysctl_tcp_window_scaling;
 extern int sysctl_tcp_sack;
 extern int sysctl_tcp_fin_timeout;
+extern int sysctl_tcp_ignore_csum;
 extern int sysctl_tcp_keepalive_time;
 extern int sysctl_tcp_keepalive_probes;
 extern int sysctl_tcp_keepalive_intvl;
--- a/kernel/linux-4.1/include/uapi/linux/sysctl.h
+++ b/kernel/linux-4.1/include/uapi/linux/sysctl.h
@@ -429,6 +429,7 @@ enum
 	NET_TCP_ALLOWED_CONG_CONTROL=123,
 	NET_TCP_MAX_SSTHRESH=124,
 	NET_TCP_FRTO_RESPONSE=125,
+	NET_IPV4_TCP_IGNORE_CSUM=200,
 };
 
 enum {
--- a/kernel/linux-4.1/kernel/sysctl_binary.c
+++ b/kernel/linux-4.1/kernel/sysctl_binary.c
@@ -356,6 +356,7 @@ static const struct bin_table bin_net_ip
 	{ CTL_INT,	NET_IPV4_TCP_RETRIES1,			"tcp_retries1" },
 	{ CTL_INT,	NET_IPV4_TCP_RETRIES2,			"tcp_retries2" },
 	{ CTL_INT,	NET_IPV4_TCP_FIN_TIMEOUT,		"tcp_fin_timeout" },
+	{ CTL_INT,	NET_IPV4_TCP_IGNORE_CSUM,		"tcp_ignore_csum" },
 	{ CTL_INT,	NET_TCP_SYNCOOKIES,			"tcp_syncookies" },
 	{ CTL_INT,	NET_TCP_TW_RECYCLE,			"tcp_tw_recycle" },
 	{ CTL_INT,	NET_TCP_ABORT_ON_OVERFLOW,		"tcp_abort_on_overflow" },
--- a/kernel/linux-4.1/net/ipv4/sysctl_net_ipv4.c
+++ b/kernel/linux-4.1/net/ipv4/sysctl_net_ipv4.c
@@ -372,6 +372,13 @@ static struct ctl_table ipv4_table[] = {
 		.mode		= 0644,
 		.proc_handler	= proc_dointvec_jiffies,
 	},
+	{
+		.procname	= "tcp_ignore_csum",
+		.data		= &sysctl_tcp_ignore_csum,
+		.maxlen		= sizeof(int),
+		.mode		= 0644,
+		.proc_handler	= proc_dointvec,
+	},
 #ifdef CONFIG_SYN_COOKIES
 	{
 		.procname	= "tcp_syncookies",
--- a/kernel/linux-4.1/net/ipv4/tcp_ipv4.c
+++ b/kernel/linux-4.1/net/ipv4/tcp_ipv4.c
@@ -93,6 +93,7 @@
 #include <linux/nbuff.h>
 #endif
 
+int sysctl_tcp_ignore_csum __read_mostly = 0;
 int sysctl_tcp_tw_reuse __read_mostly;
 int sysctl_tcp_low_latency __read_mostly;
 EXPORT_SYMBOL(sysctl_tcp_low_latency);
@@ -1698,6 +1699,12 @@ int bcm_tcp_v4_recv(pNBuff_t pNBuff, Blo
 	 * are executed
 	 */
 	if (skb) {
+
+		/* instead of ignoring checksums on every incoming packet from all
+		 * network devices, ignore them only from the ethernet driver */
+		if (sysctl_tcp_ignore_csum)
+			skb->ip_summed = CHECKSUM_UNNECESSARY;
+
 		local_bh_disable();
 		tcp_v4_rcv(skb);
 		local_bh_enable();
