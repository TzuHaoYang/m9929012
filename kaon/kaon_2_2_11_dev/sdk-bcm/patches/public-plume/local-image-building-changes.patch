--- a/build/Makefile
+++ b/build/Makefile
@@ -1010,6 +1010,8 @@ ifneq ($(BUILD_MODSW_OPENWRTEE),)
 	$(MAKE) -C $(BUILD_DIR)/build -f Bcmbeep.mk buildFS_OPENWRTEE
 endif
 
+	@echo "Calling Makefile.plume cleanup_image"
+	@make -f Makefile.plume cleanup_image
 
 ifeq ($(strip $(BRCM_RAMDISK_BOOT_EN)),y)
 	cd $(TARGETS_DIR); ./buildFS_RD
@@ -1028,6 +1030,8 @@ shell:
 	PS1='!_' bash --norc --noprofile
 
 buildimage_final:
+	$(eval $@CUR_TS := $(shell date '+%y%m%d_%H%M'))
+
 ifeq ($(strip $(BRCM_KERNEL_ROOTFS)),all)
 
 ###############
@@ -1079,7 +1083,7 @@ endif
 
     ifeq ($(strip $(SKIP_TIMESTAMP_IMAGE)),)
 # copy images to images directory and add a timestamp
-	find $(PROFILE_DIR) -name *_nand_cferom_*.w  -printf "%f\n" | while read name; do cp $(PROFILE_DIR)/$$name $(IMAGES_DIR)/$${name/.w/_$(BRCM_RELEASETAG)-$(shell date '+%y%m%d_%H%M').w}; done
+	find $(PROFILE_DIR) -name *_nand_*.w  -printf "%f\n" | while read name; do cp $(PROFILE_DIR)/$$name $(IMAGES_DIR)/$${name/.w/_$(BRCM_RELEASETAG)-$($@CUR_TS).w}; done
     endif
 
 endif
@@ -1206,15 +1210,15 @@ endif
 ifeq ($(strip $(SKIP_TIMESTAMP_IMAGE)),)
 ifeq ($(strip $(BTRM_BOOT_ONLY)),y)
 ifneq ($(findstring _$(strip $(BRCM_CHIP))_,_63178_47622_),)
-	@cp $(PROFILE_DIR)/$(FLASH_IMAGE_NAME)_bootromboot.w $(IMAGES_DIR)/$(FLASH_IMAGE_NAME)_bootromboot_$(BRCM_RELEASETAG)-$(shell date '+%y%m%d_%H%M').w
-	@cp $(PROFILE_DIR)/$(CFE_FS_KERNEL_IMAGE_NAME)_bootromboot $(IMAGES_DIR)/$(CFE_FS_KERNEL_IMAGE_NAME)_bootromboot_$(BRCM_RELEASETAG)-$(shell date '+%y%m%d_%H%M')
+	@cp $(PROFILE_DIR)/$(FLASH_IMAGE_NAME)_bootromboot.w $(IMAGES_DIR)/$(FLASH_IMAGE_NAME)_bootromboot_$(BRCM_RELEASETAG)-$($@CUR_TS).w
+	@cp $(PROFILE_DIR)/$(CFE_FS_KERNEL_IMAGE_NAME)_bootromboot $(IMAGES_DIR)/$(CFE_FS_KERNEL_IMAGE_NAME)_bootromboot_$(BRCM_RELEASETAG)-$($@CUR_TS).w
 else
-	@cp $(PROFILE_DIR)/$(FLASH_IMAGE_NAME).w $(IMAGES_DIR)/$(FLASH_IMAGE_NAME)_$(BRCM_RELEASETAG)-$(shell date '+%y%m%d_%H%M').w
-	@cp $(PROFILE_DIR)/$(CFE_FS_KERNEL_IMAGE_NAME) $(IMAGES_DIR)/$(CFE_FS_KERNEL_IMAGE_NAME)_$(BRCM_RELEASETAG)-$(shell date '+%y%m%d_%H%M')
+	@cp $(PROFILE_DIR)/$(FLASH_IMAGE_NAME).w $(IMAGES_DIR)/$(FLASH_IMAGE_NAME)_$(BRCM_RELEASETAG)-$($@CUR_TS).w
+	@cp $(PROFILE_DIR)/$(CFE_FS_KERNEL_IMAGE_NAME) $(IMAGES_DIR)/$(CFE_FS_KERNEL_IMAGE_NAME)_$(BRCM_RELEASETAG)-$($@CUR_TS).w
 endif
 else
-	@cp $(PROFILE_DIR)/$(FLASH_IMAGE_NAME).w $(IMAGES_DIR)/$(FLASH_IMAGE_NAME)_$(BRCM_RELEASETAG)-$(shell date '+%y%m%d_%H%M').w
-	@cp $(PROFILE_DIR)/$(CFE_FS_KERNEL_IMAGE_NAME) $(IMAGES_DIR)/$(CFE_FS_KERNEL_IMAGE_NAME)_$(BRCM_RELEASETAG)-$(shell date '+%y%m%d_%H%M')
+	@cp $(PROFILE_DIR)/$(FLASH_IMAGE_NAME).w $(IMAGES_DIR)/$(FLASH_IMAGE_NAME)_$(BRCM_RELEASETAG)-$($@CUR_TS).w
+	@cp $(PROFILE_DIR)/$(CFE_FS_KERNEL_IMAGE_NAME) $(IMAGES_DIR)/$(CFE_FS_KERNEL_IMAGE_NAME)_$(BRCM_RELEASETAG)-$($@CUR_TS).w
 endif
 endif
 
@@ -1228,6 +1232,9 @@ else
 endif
 	@echo
 	@echo -e "Done! Image $(PROFILE) has been built in $(PROFILE_DIR)."
+
+	@echo -e "Calling Makefile.plume"
+	@make -f Makefile.plume buildimage_final CUR_TS=$($@CUR_TS)
 endif
 else
 	@echo "******************** SKIP NOR FLASH IMAGE BUILD for DESKTOP_LINUX ********************";
--- a/hostTools/createnfimg/createnfimg.c
+++ b/hostTools/createnfimg/createnfimg.c
@@ -533,7 +533,7 @@ int main(int argc, char **argv)
     i= strlen(p_infile_name);
     p_outfile_out_name = (char *)malloc(i + 16);
     strcpy(p_outfile_out_name, p_infile_name);
-    if (pch = strchr(p_outfile_out_name, '.')) {
+    if (pch = strrchr(p_outfile_out_name, '.')) {
         *pch = 0;
     }
     strcat(p_outfile_out_name, ".out");
--- a/targets/buildFS
+++ b/targets/buildFS
@@ -30,7 +30,7 @@ fi
 chmod 777 $ROOTFS
 # Copy files onto root file system
 echo "Creating target root file system..."
-cp -av $FSSRC_DIR/* $ROOTFS
+rsync -av --exclude=".svn" $FSSRC_DIR/ $ROOTFS/
 
 # Update mdev.conf with 'ignore' entries for proprietary drivers
 echo "Updating mdev.conf"
@@ -54,7 +54,7 @@ done
 find $INSTALL_DIR -name "*_saved-*" | xargs rm -fv
 
 # Copy over all files to ROOTFS
-rsync -av --exclude="/lib"  $INSTALL_DIR/* $ROOTFS
+rsync -av --exclude="/lib" $INSTALL_DIR/ $ROOTFS/
 
 # Setup lib directories
 mkdir $ROOTFS/lib
--- a/targets/buildUBI
+++ b/targets/buildUBI
@@ -172,8 +172,24 @@ if [ ! -z "$UBI_INI" ]; then
    echo -e "vol_id=2"               >> $UBI_INI
    echo -e "vol_name=METADATACOPY"  >> $UBI_INI
 
+   if test "$BUILD_PLUME" = y
+   then
+       echo -e "[ubi9]"                 >> $UBI_INI
+       echo -e "mode=ubi"               >> $UBI_INI
+       echo -e "vol_type=dynamic"       >> $UBI_INI
+       echo -e "vol_id=9"               >> $UBI_INI
+       echo -e "vol_name=rootfs_overlay"   >> $UBI_INI
+       echo -e "vol_size=8MiB"          >> $UBI_INI
+       echo -e "vol_flags=autoresize"   >> $UBI_INI
+
+       echo -e "[ubi3]"                 >> $UBI_INI
+       echo -e "mode=ubi"               >> $UBI_INI
+       echo -e "vol_type=dynamic"       >> $UBI_INI
+       echo -e "image=$FILESYSTEM"      >> $UBI_INI
+       echo -e "vol_id=0"               >> $UBI_INI
+       echo -e "vol_name=rootfs_ubifs"  >> $UBI_INI
    # if vmlinux, also add filesystem
-   if [ ! -z "$FILESYSTEM" ]; then
+   elif [ ! -z "$FILESYSTEM" ]; then
    
       echo -e "[ubi3]"                 >> $UBI_INI
       echo -e "mode=ubi"               >> $UBI_INI
--- /dev/null
+++ b/Makefile.plume
@@ -0,0 +1,45 @@
+CURR_DIR = $(shell pwd)
+include $(CURR_DIR)/make.common
+
+ifeq ($(strip $(BUILD_PLUME)),y)
+cleanup_image:
+	@echo -e "Removing unused files from staging"
+	@rm -rf ${PROFILE_DIR}/fs/webs/
+	@rm -f ${PROFILE_DIR}/fs/bin/openssl
+	@rm -f ${PROFILE_DIR}/fs/bin/sqlite3
+	@rm -f ${PROFILE_DIR}/fs/lib/libsqlite3.so*
+	@echo -e "remove .a XXX"
+	@find ${PROFILE_DIR}/fs/ -name "*.a" -or -name "*.la" | xargs rm -f
+	@rm -f ${PROFILE_DIR}/fs/lib/libjpeg.so*
+
+ENCKEY := $(shell openssl rand -base64 32)
+
+buildimage_final:
+	$(eval $@PLUME_VER := $(shell cat $(PROFILE_DIR)/fs/.version | cut -d\  -f1))
+	$(eval $@RENAME_PROFILE=$(patsubst %_BCM52,%_BCM527,$(OPENSYNC_TARGET)))
+
+	@echo -e "Renaming to Plume image naming style"
+	@find $(IMAGES_DIR) -name bcm$(PROFILE)_*$(CUR_TS)* -printf "%f\n" | \
+		while read name; \
+		do \
+			NEW_NAME="$${name}"; \
+			NEW_NAME="$${NEW_NAME/bcm$(PROFILE)_/bcm$($@RENAME_PROFILE)_}"; \
+			NEW_NAME="$${NEW_NAME/_$${BRCM_RELEASETAG}-$${CUR_TS}/-$($@PLUME_VER)}" ; \
+			NEW_NAME="$${NEW_NAME/\.w/\.img}" ; \
+			mv $(IMAGES_DIR)/$${name} $(IMAGES_DIR)/$${NEW_NAME} ; \
+			(cd $(IMAGES_DIR) && md5sum "$${NEW_NAME}" > "$${NEW_NAME}.md5.save") ; \
+			\
+			if echo $$NEW_NAME | grep -q '_nand_.*fs_image_.*\.img$$'; \
+			then \
+				ENC_NAME="$${NEW_NAME%.img}.eim"; \
+				openssl enc -aes-256-cbc -pass pass:$(ENCKEY) -md sha256 -nosalt -in "$(IMAGES_DIR)/$${NEW_NAME}" -out "$(IMAGES_DIR)/$${ENC_NAME}" ; \
+				echo ${ENCKEY} > "$(IMAGES_DIR)/$${ENC_NAME}.key" ; \
+				(cd $(IMAGES_DIR) && md5sum "$${ENC_NAME}" > "$${ENC_NAME}.md5.save") ; \
+			fi \
+		done
+else
+cleanup_image:
+	true
+buildimage_final:
+	true
+endif
--- a/make.common
+++ b/make.common
@@ -389,6 +389,8 @@ export BRCM_VOICE_BOARD_ID BRCM_MAIN_TP_
 export BRCM_DRIVER_FBOND_DEBUG
 export BRCM_MISC1_PARTITION_SIZE BRCM_MISC2_PARTITION_SIZE BRCM_MISC3_PARTITION_SIZE BRCM_MISC4_PARTITION_SIZE
 export BRCM_WLAN_FEATURE
+export BUILD_PLUME
+export BUILD_OPENSYNC
 export BUILD_BRCM_CMS BUILD_BRCM_HNDROUTER BUILD_HND_MFG BUILD_HND_NIC BUILD_HND_EAP BUILD_BRCM_CPEROUTER BUILD_BRCM_AIRIQ BUILD_HND_EAP_AP1 BUILD_BRCM_HOSTAPD
 export BRCM_INCREMENTAL_IMAGE_LOAD
 export SECURE_BOOT_ARCH SECURE_BOOT_KEY_DIR SECURE_BOOT_TURNKEY SECURE_BOOT_TK_ABORT_TIMEOUT SECURE_BOOT_TK_REQ_FLD SECURE_BOOT_TK_MODE_REQ SECURE_BOOT_TK_MID SECURE_BOOT_TK_KS_OFFS SECURE_BOOT_TK_OID BUILD_SBI_NOHDR BUILD_SBI_SIGN BUILD_SBI_NOHDR_MFG AVS_IMAGE_MAX_SIZE AVS_IMAGE_PATH
