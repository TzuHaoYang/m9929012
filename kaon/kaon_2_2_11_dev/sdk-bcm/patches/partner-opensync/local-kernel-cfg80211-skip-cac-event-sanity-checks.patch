08-Dec-2020 04:04 AM PST - Praveen KethiniHaribabu (Broadcom Corporation)
Hi Michal,
 
I have attached the consolidated patch including the fix for handling pre-cleared dfs channels.
 

rb169774_rb171572_rb172893_rb173525_rb173702_17_10_157_1501.patch ==> For 20.1 release
rb169774_rb171572_rb172893_rb173525_rb173702_17_10_121_37.patch ==> For 19.1.1p1 release
 
As discussed earlier, in addition to these patches please comment out this WARN_ON and return in the kernel.
+#if 0
783 if (WARN_ON(!wdev->cac_started && event != NL80211_RADAR_CAC_STARTED))
784 return;
785
786 if (WARN_ON(!wdev->chandef.chan))
787 return;
+#endif

 
Regards,
Praveen
--- a/kernel/linux-4.1/net/wireless/mlme.c
+++ b/kernel/linux-4.1/net/wireless/mlme.c
@@ -780,11 +780,21 @@ void cfg80211_cac_event(struct net_devic
 
 	trace_cfg80211_cac_event(netdev, event);
 
+	/* The following #if is as per Praveen's
+	 * recommendation with regards to some kernel
+	 * warnings that were seen on the backported logic.
+	 *
+	 * Looking at the chandef handling in this function,
+	 * it should be safe as far as null-deref safety
+	 * goes.
+	 */
+#if 0
 	if (WARN_ON(!wdev->cac_started && event != NL80211_RADAR_CAC_STARTED))
 		return;
 
 	if (WARN_ON(!wdev->chandef.chan))
 		return;
+#endif
 
 	switch (event) {
 	case NL80211_RADAR_CAC_FINISHED:
