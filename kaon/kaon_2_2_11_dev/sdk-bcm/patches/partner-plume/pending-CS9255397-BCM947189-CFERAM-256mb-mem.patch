After rebasing to p1 the board_earlyinit /
board_earlyinit_common swap is no longer necessary since
it's already in the code base.
--- a/cfe/cfe/arch/arm/board/bcm63xx_shared/src/bcm63xx_impl3_common.S
+++ b/cfe/cfe/arch/arm/board/bcm63xx_shared/src/bcm63xx_impl3_common.S
@@ -241,7 +241,11 @@ FUNC(mem_size)
 	ldr	r2, =0xaa55beef
 	mov	r1, #0
 	str	r1, [r3, #0x70]
+#if defined(CFG_RAMAPP)	
+	mov	r0, #0x8000000	/* Initial check offset */
+#else 	
 	mov	r0, #0x100000	/* Initial check offset */
+#endif	
 	mov	r5, #0x10000000	/* Loop up to this offset (256 MB) */
 1:
 	mov	r4, #0x00000000
@@ -260,4 +264,4 @@ FUNC(mem_size)
 2:
 	mov	lr, ip		/* restore link reg */
 	mov	pc, lr
-END(mem_size)
\ No newline at end of file
+END(mem_size)
--- a/cfe/cfe/arch/arm/common/src/init_arm.S
+++ b/cfe/cfe/arch/arm/common/src/init_arm.S
@@ -303,6 +303,16 @@ do_clear_marker:
 	lsr	r0, r0, #20		/* memory size in Mbytes */
 	ldr	r1, =MEM_SIZE_REG
 	str	r0, [r1]
+#elif defined(_BCM947189_) && defined(CFG_RAMAPP)
+	ldr	r0, =MEM_SIZE_REG
+	ldr	r5, [r0]		/* memory size in Mbytes */
+	cmp	r5, #0	
+	bne 1f
+	CALLINIT(=mem_size)
+	lsr	r0, r0, #20		/* memory size in Mbytes */
+	ldr	r1, =MEM_SIZE_REG
+	str	r0, [r1]
+1:	
 #endif
 	SETLEDS('C','P','U','0')
 
