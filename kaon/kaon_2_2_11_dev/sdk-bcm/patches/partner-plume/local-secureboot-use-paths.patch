--- a/hostTools/PerlLib/BRCM/SBI_DEP.pm
+++ b/hostTools/PerlLib/BRCM/SBI_DEP.pm
@@ -576,27 +576,23 @@ sub prepare_keys {
     my %keys;
     if ( $arg->{'sec_arch'} eq 'GEN2' ) {
         if ( $arg->{'sec_mode'} eq 'MFG' or $arg->{'sec_mode'} eq 'OP' ) {
-            $keys{'MFG'}->{'ek'}  = $self->f2hex( $cred->{'MFG'}->{'EK'} );
-            $keys{'MFG'}->{'iv'}  = $self->f2hex( $cred->{'MFG'}->{'IV'} );
+            $keys{'MFG'}->{'ek'}  = $cred->{'MFG'}->{'EK'};
+            $keys{'MFG'}->{'iv'}  = $cred->{'MFG'}->{'IV'};
             $keys{'MFG'}->{'rsa'} = $cred->{'MFG'}->{'RSA'};
         }
     }
     else {
 
         if ( defined $arg->{'sec_opt'}->{'encrypt'} ) {
-            $keys{'MFG'}->{'ek'} = $self->f2hex( $cred->{'MFG'}->{'KAES_EK'} );
-            $keys{'MFG'}->{'iv'} = $self->f2hex( $cred->{'MFG'}->{'KAES_IV'} );
+            $keys{'MFG'}->{'ek'} = $cred->{'MFG'}->{'KAES_EK'};
+            $keys{'MFG'}->{'iv'} = $cred->{'MFG'}->{'KAES_IV'};
             if ( defined $arg->{'sec_opt'}->{'oem'} ) {
-                $keys{'FLD'}->{'ek'} =
-                  $self->f2hex( $cred->{'FLD'}->{'OEM_KAES_EK'} );
-                $keys{'FLD'}->{'iv'} =
-                  $self->f2hex( $cred->{'FLD'}->{'OEM_KAES_IV'} );
+                $keys{'FLD'}->{'ek'} = $cred->{'FLD'}->{'OEM_KAES_EK'};
+                $keys{'FLD'}->{'iv'} = $cred->{'FLD'}->{'OEM_KAES_IV'};
             }
             else {
-                $keys{'FLD'}->{'ek'} =
-                  $self->f2hex( $cred->{'FLD'}->{'KROE_EK'} );
-                $keys{'FLD'}->{'iv'} =
-                  $self->f2hex( $cred->{'FLD'}->{'KROE_IV'} );
+                $keys{'FLD'}->{'ek'} = $cred->{'FLD'}->{'KROE_EK'};
+                $keys{'FLD'}->{'iv'} = $cred->{'FLD'}->{'KROE_IV'};
             }
         }
         $keys{'MFG'}->{'rsa'} = $cred->{'MFG'}->{'KRSA'};
--- a/hostTools/PerlLib/BRCM/SBI_UTIL.pm
+++ b/hostTools/PerlLib/BRCM/SBI_UTIL.pm
@@ -312,11 +312,13 @@ sub _encrypt_aes_128_cbc {
     my $out;
     my $_in  = "/tmp/._tmpin_encrypt_$$";
     my $_out = "/tmp/._tmpout_encrypt_$$";
+    my $ek_d = $self->f2hex($ek);
+    my $iv_d = $self->f2hex($iv);
 
     #printf("Encrypting %s \n",unpack("H*",$in));
     $self->fdump( $_in, $in );
     $self->run_shell(
-        "$self->{openssl} enc -aes-128-cbc -K $ek -iv $iv -in $_in -out $_out");
+        "$self->{openssl} enc -aes-128-cbc -K $ek_d -iv $iv_d -in $_in -out $_out");
     $out = $self->f2var($_out);
 
     #printf("%d %s key %s iv %s \n",length $out, unpack("H*",$out),$ek,$iv );
