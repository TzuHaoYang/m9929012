--- a/hostTools/PerlLib/BRCM/SBI_DEP.pm
+++ b/hostTools/PerlLib/BRCM/SBI_DEP.pm
@@ -890,8 +890,9 @@ sub encrypt {
     my $self = shift;
     my $keys = shift;
     my $in   = shift;
+    my $sec_mode = shift;
     return $self->_encrypt_aes_128_cbc( $keys->{'ek'}, $keys->{'iv'},
-        $self->f2var($in) );
+        $self->f2var($in), $sec_mode);
 }
 
 sub print_hash {
@@ -931,7 +932,8 @@ sub build_sbi {
         $arg->{'sec_arch'}, $arg->{'sec_mode'} );
 
     if ( defined $arg->{'sec_opt'}->{'encrypt'} ) {
-        $image = $self->encrypt( $keys->{ $arg->{'sec_mode'} }, $arg->{'in'} );
+        $image = $self->encrypt( $keys->{ $arg->{'sec_mode'} }, $arg->{'in'},
+            $arg->{'sec_mode'});
     }
     else {
         $image = $self->f2var( $arg->{'in'} );
@@ -943,8 +945,8 @@ sub build_sbi {
         $auth_hdr->{'auth_len'}
     );
     $image   = $auth_hdr->{'bytes'} . $image;
-    $mfg_sig = $self->_sign_sha256( $keys->{'MFG'}->{'rsa'}, $image );
-    $fld_sig = $self->_sign_sha256( $keys->{'FLD'}->{'rsa'}, $image );
+    $mfg_sig = $self->_sign_sha256( $keys->{'MFG'}->{'rsa'}, $image, 'MFG' );
+    $fld_sig = $self->_sign_sha256( $keys->{'FLD'}->{'rsa'}, $image, 'FLD' );
     $image   = $unauth_hdr . $image . $fld_sig . $mfg_sig;
     $self->set_val_at( \$crc, 0, $self->crc32($image), 'u32' );
     $self->fdump( $arg->{'out'}, $image . $crc );
@@ -985,7 +987,7 @@ sub build_sbi_gen1 {
         );
     }
 
-    my $sig = $self->_sign_sha256( $keys->{'rsa'}, $image );
+    my $sig = $self->_sign_sha256( $keys->{'rsa'}, $image, $arg->{'sec_mode'} );
 
     # legacy calculations inherited from old gen1 image build
     # this will be removed soon for 63268
@@ -1043,7 +1045,7 @@ sub build_sbi_gen2 {
       . $self->f2var( $cred->{'MFG'}->{'PLT'}->{'OP_SIG'} )
       . $image;
 
-    my $sig = $self->_sign_sha256( $keys->{'rsa'}, $image );
+    my $sig = $self->_sign_sha256( $keys->{'rsa'}, $image, $arg->{'sec_mode'} );
     $image = $image . $sig;
 
     #printf ("image length 0x%x\n",length $image);
@@ -1190,8 +1192,8 @@ sub non_header_sbi {
 
     $image = $split_file{'left'} . $image;
     $image =
-      $self->_encrypt_aes_128_cbc( $keys->{'ek'}, $keys->{'iv'}, $image );
-    my $sig = $self->_sign_sha256( $keys->{'rsa'}, $image );
+      $self->_encrypt_aes_128_cbc( $keys->{'ek'}, $keys->{'iv'}, $image, $arg->{'sec_mode'} );
+    my $sig = $self->_sign_sha256( $keys->{'rsa'}, $image, $arg->{'sec_mode'} );
     $self->fdump( $arg->{'out'}, $sig . $image );
     $self->run_shell("rm -f $temp $temp.*");
 }
@@ -1205,7 +1207,7 @@ sub sign_bi {
     printf( "Building %s:%s image signature\n",
         $arg->{'sec_arch'}, $arg->{'sec_mode'} );
     $keys = $keys->{ $arg->{'sec_mode'} };
-    $self->sign_sha256( $keys->{'rsa'}, $arg->{'in'}, $arg->{'out'} );
+    $self->sign_sha256( $keys->{'rsa'}, $arg->{'in'}, $arg->{'out'}, $arg->{'sec_mode'} );
 }
 
 sub build_gen3 {
@@ -1355,15 +1357,15 @@ sub prepare_trailer {
 sub gen_sbi_sig {
     my $self    = shift;
     my ($arg, $image, $keys) = @_;
-    my $mfg     = $self->_sign_sha256( $keys->{'MFG'}->{'rsa'}, $image );
-    my $fld     = $self->_sign_sha256( $keys->{'FLD'}->{'rsa'}, $image );
+    my $mfg     = $self->_sign_sha256( $keys->{'MFG'}->{'rsa'}, $image, 'MFG' );
+    my $fld     = $self->_sign_sha256( $keys->{'FLD'}->{'rsa'}, $image, 'FLD' );
     return { 'mfg' => $mfg, 'fld' => $fld };
 }
 
 sub encrypt_sbi {
     my $self = shift;
-    my ( $keys, $image ) = @_;
-    return $self->_encrypt_aes_128_cbc( $keys->{'ek'}, $keys->{'iv'}, $image );
+    my ( $keys, $image, $sec_mode ) = @_;
+    return $self->_encrypt_aes_128_cbc( $keys->{'ek'}, $keys->{'iv'}, $image, $sec_mode );
 }
 
 sub init {
@@ -1404,7 +1406,7 @@ sub build_sbi3 {
     if ( defined $arg->{'sec_opt'}->{'encrypt'} ) {
 
         #conditionally ecnryp SBI GEN3 as per protocol
-        $image = $self->encrypt_sbi( $keys->{ $arg->{'sec_mode'} }, $image );
+        $image = $self->encrypt_sbi( $keys->{ $arg->{'sec_mode'} }, $image, $arg->{'sec_mode'} );
     }
 
     # generate authenticated/unauthenticated pair
--- a/hostTools/PerlLib/BRCM/SBI_UTIL.pm
+++ b/hostTools/PerlLib/BRCM/SBI_UTIL.pm
@@ -308,7 +308,7 @@ sub f2var {
 
 sub _encrypt_aes_128_cbc {
     my $self = shift;
-    my ( $ek, $iv, $in ) = @_;
+    my ( $ek, $iv, $in, $sec_mode ) = @_;
     my $out;
     my $_in  = "/tmp/._tmpin_encrypt_$$";
     my $_out = "/tmp/._tmpout_encrypt_$$";
@@ -402,6 +402,7 @@ sub _sign_sha256 {
     my $self = shift;
     my $pem  = shift;
     my $in   = shift;
+    my $sec_mode = shift;
     my $out;
     my $tmpin  = "/tmp/.tmpin_sha_$$";
     my $tmpout = "/tmp/.tmpout_sha_$$";
@@ -530,7 +531,7 @@ sub encrypt_aes_128_cbc {
 
 sub sign_sha256 {
     my $self = shift;
-    my ( $pem, $if, $of ) = @_;
+    my ( $pem, $if, $of, $sec_mode ) = @_;
     if ( !( -e $pem ) or !( -e $if ) ) {
         die "Not existing $pem or $if";
     }
